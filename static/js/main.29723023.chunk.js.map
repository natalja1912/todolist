{"version":3,"sources":["utils/constants.js","components/Header/Header.js","components/Footer/Footer.js","components/Form/Form.js","icons/EditIcon.js","icons/CopyIcon.js","icons/DeleteIcon.js","components/Checkbox/Checkbox.js","components/Todo/Todo.js","components/App/App.js","serviceWorker.js","index.js"],"names":["todos","task","checked","Header","onClick","className","Footer","Form","value","handleChange","handleSubmit","type","placeholder","onChange","evt","target","preventDefault","handleButtonSubmit","EditIcon","width","height","viewBox","fill","xmlns","d","CopyIcon","DeleteIcon","y","transform","x","Checkbox","Todo","todo","index","handleEditButton","handleCopyButton","handleDeleteButton","handleCheckBox","key","App","useState","todolist","setToDoList","inputValue","setInputValue","taskToEdit","setTaskToEdit","filter","setFilter","doneToDos","renderedToDos","splice","newToDoList","concat","map","selectedTask","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.29723023.chunk.js","sourcesContent":["\r\nconst todos = [\r\n  {\r\n    task: 'Сделать проектную работу',\r\n    checked: false\r\n  },\r\n  {\r\n    task: 'Полить цветы',\r\n    checked: false\r\n  },\r\n  {\r\n    task: 'Пройти туториал по Реакту',\r\n    checked: false\r\n  },\r\n  {\r\n    task: 'Сделать фронт для своего проекта',\r\n    checked: false\r\n  },\r\n  {\r\n    task: 'Погулять с собакой',\r\n    checked: true\r\n  },\r\n  {\r\n    task: 'Разобраться в замыканиях',\r\n    checked: false\r\n  },\r\n  {\r\n    task: 'Решить задачу на Codewars',\r\n    checked: false\r\n  }\r\n];\r\n\r\nexport default todos;","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header({ onClick }) {\r\n    return (\r\n        <header className=\"header\">\r\n            <nav className=\"header__nav\">\r\n                <button className=\"filter__button\" onClick={() => onClick('all')}>&rarr; Вce задачи</button>\r\n                <button className=\"filter__button\" onClick={() => onClick('done')}>&rarr; Выполненные задачи</button>\r\n            </nav>\r\n            <h1 className=\"header__heading\">Список дел</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer(){\r\n    return(\r\n        <footer className=\"footer\">\r\n        © Natalia Pavlova. 2020\r\n      </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Form.css';\r\n\r\nfunction Form({ value, handleChange, handleSubmit }) {\r\n    function handleButtonSubmit(evt) {\r\n        evt.preventDefault();\r\n        handleSubmit();\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\">\r\n            <input className=\"form__input\" type=\"text\" placeholder=\"Следующее дело...\" value={value} onChange={(evt) => handleChange(evt.target.value)} />\r\n            <button className=\"form__button\" type=\"submit\" onClick={(evt) => handleButtonSubmit(evt)}>Добавить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst EditIcon = () => {\r\n    return(<svg width=\"24\" height=\"23\" viewBox=\"0 0 24 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n            d=\"M18.4246 21.5861H1.02206V4.8663H10.7842V3.8623H0.0180664V22.5901H19.4285V12.1687H18.4246V21.5861Z\"\r\n            fill=\"white\" />\r\n        <path\r\n            d=\"M22.0657 1.43924L21.5771 0.953979C20.9658 0.343135 20.137 0 19.2729 0C18.4088 0 17.58 0.343135 16.9687 0.953979L8.53857 9.38415V14.4777H13.6355L22.0657 6.04756C22.6757 5.43589 23.0183 4.60727 23.0183 3.7434C23.0183 2.87953 22.6757 2.05091 22.0657 1.43924ZM13.2205 13.4871H9.53922V9.80583L16.7144 2.6273L20.3957 6.30859L13.2205 13.4871ZM21.3562 5.33807L21.1018 5.59242L17.4205 1.91112L17.6749 1.65677C18.0977 1.23497 18.6706 0.998085 19.2679 0.998085C19.8652 0.998085 20.438 1.23497 20.8609 1.65677L21.3495 2.14538C21.5598 2.35445 21.7268 2.60293 21.841 2.87661C21.9552 3.15029 22.0143 3.4438 22.0149 3.74034C22.0155 4.03688 21.9576 4.33063 21.8446 4.60479C21.7316 4.87895 21.5656 5.12813 21.3562 5.33807Z\"\r\n            fill=\"white\" />\r\n    </svg>)\r\n}\r\n\r\nexport default EditIcon;","import React from 'react';\r\n\r\nconst CopyIcon = () => {\r\n    return( <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M16.0066 12.2745V3.73211C16.0066 1.65872 14.3479 0 12.2745 0H3.73211C1.65872 0 0 1.65872 0 3.73211V12.2745C0 14.3479 1.65872 16.0066 3.73211 16.0066H12.2745C14.3479 16.0066 16.0066 14.3479 16.0066 12.2745ZM0.870825 12.2745V3.73211C0.870825 2.11486 2.15633 0.829358 3.77358 0.829358H12.316C13.9332 0.829358 15.2187 2.11486 15.2187 3.73211V12.2745C15.2187 13.8917 13.9332 15.1773 12.316 15.1773H3.73211C2.15633 15.1773 0.829358 13.8917 0.870825 12.2745Z\"\r\n      fill=\"white\" />\r\n    <path\r\n      d=\"M12.0256 24.3001H20.568C22.6414 24.3001 24.3001 22.6414 24.3001 20.568V12.0256C24.3001 9.95217 22.6414 8.29346 20.568 8.29346H19.3239V9.12282H20.568C22.1852 9.12282 23.4707 10.4083 23.4707 12.0256V20.568C23.4707 22.1852 22.1852 23.4707 20.568 23.4707H12.0256C10.4083 23.4707 9.12282 22.1852 9.12282 20.568V19.3239H8.29346V20.568C8.29346 22.5999 9.95217 24.3001 12.0256 24.3001Z\"\r\n      fill=\"white\" />\r\n  </svg>)\r\n}\r\n\r\nexport default CopyIcon;","import React from 'react';\r\n\r\nconst DeleteIcon = () => {\r\n    return (<svg width=\"18\" height=\"17\" viewBox=\"0 0 18 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect y=\"16.2637\" width=\"23\" height=\"1\" transform=\"rotate(-45 0 16.2637)\" fill=\"white\" />\r\n        <rect x=\"1\" width=\"23\" height=\"1\" transform=\"rotate(45 1 0)\" fill=\"white\" />\r\n    </svg>)\r\n}\r\n\r\nexport default DeleteIcon;","import React from 'react';\r\nimport './Checkbox.css';\r\n\r\nfunction Checkbox({ checked, onClick }) {\r\n    return (\r\n        <button className={`checkbox ${checked && 'checkbox_checked'}`} onClick={onClick}></button>\r\n    )\r\n}\r\n\r\nexport default Checkbox;","import React from 'react';\r\nimport './Todo.css';\r\nimport EditIcon from '../../icons/EditIcon';\r\nimport CopyIcon from '../../icons/CopyIcon';\r\nimport DeleteIcon from '../../icons/DeleteIcon';\r\nimport Checkbox from '../Checkbox/Checkbox';\r\n\r\nfunction Todo({ todo, index, handleEditButton, handleCopyButton, handleDeleteButton, handleCheckBox }) {\r\n\r\n    return (\r\n        <li className=\"list__item\" key={index}>\r\n            <div className=\"list__item-text\">\r\n                <label className={`list__item-label ${todo.checked && 'label-strike'}`}>\r\n                    <Checkbox checked={todo.checked} onClick={() => handleCheckBox(index)} />\r\n                    {todo.task}\r\n                </label>\r\n            </div>\r\n            <div className=\"list__item-buttons\">\r\n                <button className=\"list__item-button\" onClick={() => handleEditButton(index)}><EditIcon /></button>\r\n                <button className=\"list__item-button\" onClick={() => handleCopyButton(index)}><CopyIcon /></button>\r\n                <button className=\"list__item-button\" onClick={() => handleDeleteButton(index)}><DeleteIcon /></button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport todos from '../../utils/constants';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport Form from '../Form/Form';\nimport Todo from '../Todo/Todo';\n\nfunction App() {\n  const [todolist, setToDoList] = useState(todos);\n  const [inputValue, setInputValue] = useState('');\n  //переменная taskToEdit для определения, какое задание нужно редактировать, при сабмите формы\n  const [taskToEdit, setTaskToEdit] = useState();\n  const [filter, setFilter] = useState('all');\n\n  //при нажатии кнопки edit меняем значение поля ввода формы на текст задачи, к которой относится нажатая кнопка\n  function handleEditButton(index) {\n    const selectedTask = todolist[index];\n    setInputValue(selectedTask.task);\n    setTaskToEdit(index);\n  }\n\n  //копирование задачи\n  function handleCopyButton(index) {\n    const selectedTask = todolist[index];\n    todolist.splice(index, 0, selectedTask);\n    const newToDoList = todolist.concat();\n    setToDoList(newToDoList);\n  }\n\n  //удаление задачи из списка дел\n  function handleDeleteButton(index) {\n    todolist.splice(index, 1);\n    const newToDoList = todolist.concat();\n    setToDoList(newToDoList);\n  }\n\n  //добавление новой задачи в список дел\n  function handleSubmitButton() {\n    if (!taskToEdit) {\n      setToDoList([\n        {\n          task: inputValue,\n          checked: false\n        },\n        ...todolist\n      ])\n    }\n    else {\n      todolist.splice(taskToEdit, 1, { task: inputValue, checked: false });\n      const newToDoList = todolist.concat();\n      setToDoList(newToDoList);\n    }\n    setInputValue('');\n    setTaskToEdit();\n  }\n\n\n  //изменение значка checkbox, отмечаем выполнена задача или нет\n  function handleCheckBox(index) {\n    const selectedTask = todolist[index];\n    todolist.splice(index, 1, {task: selectedTask.task, checked: !selectedTask.checked});\n    const newToDoList = todolist.concat();\n    setToDoList(newToDoList);\n  }\n\n  //массив сделанных заданий\n  const doneToDos = todolist.filter(todo => todo.checked === true);\n  //массив заданий для отрисовки\n  let renderedToDos = [];\n  filter === 'done' ? renderedToDos = doneToDos : renderedToDos = todolist;\n\n  return (\n    <div className=\"App\">\n      <Header onClick={(value) => setFilter(value)} />\n      <Form value={inputValue} handleChange={(value) => setInputValue(value)} handleSubmit={handleSubmitButton} />\n      <ul className=\"list\">\n        {\n          renderedToDos.map((todo, index) =>\n            <Todo todo={todo} index={index} handleCopyButton={(value) => handleCopyButton(value)} handleEditButton={(value) => handleEditButton(value)} handleDeleteButton={(value) => handleDeleteButton(value)} handleCheckBox={(value) => handleCheckBox(value)} />)\n        }\n      </ul>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}